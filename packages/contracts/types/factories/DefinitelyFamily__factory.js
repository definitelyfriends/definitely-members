"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefinitelyFamily__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "definitelyMemberships_",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "existingMembersRoot_",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "NotExistingMember",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "member",
                type: "address",
            },
        ],
        name: "MembershipClaimed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnerUpdated",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "proof",
                type: "bytes32[]",
            },
        ],
        name: "claimPriorMembership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "definitelyMemberships",
        outputs: [
            {
                internalType: "contract IDefinitelyMemberships",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "existingMembersRoot",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "root",
                type: "bytes32",
            },
        ],
        name: "setExistingMembersClaimRoot",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "setOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506040516105d53803806105d583398101604081905261002f916100be565b600080546001600160a01b0319166001600160a01b03851690811782556040518592907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350600180546001600160a01b0319166001600160a01b039390931692909217909155600255506100fa565b80516001600160a01b03811681146100b957600080fd5b919050565b6000806000606084860312156100d357600080fd5b6100dc846100a2565b92506100ea602085016100a2565b9150604084015190509250925092565b6104cc806101096000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806302c9177a1461006757806313af4035146100835780637d491b31146100985780638da5cb5b146100c357806392a1bf05146100d6578063c91ef450146100e9575b600080fd5b61007060025481565b6040519081526020015b60405180910390f35b61009661009136600461036c565b6100fc565b005b6001546100ab906001600160a01b031681565b6040516001600160a01b03909116815260200161007a565b6000546100ab906001600160a01b031681565b6100966100e43660046103ab565b610195565b6100966100f7366004610469565b610289565b6000546001600160a01b0316331461014a5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6002546040516bffffffffffffffffffffffff193360601b1660208201526101e1919060340160405160208183030381529060405280519060200120836102d79092919063ffffffff16565b6101fe5760405163a3cbd6df60e01b815260040160405180910390fd5b60015460405163f6029dbf60e01b81523360048201526001600160a01b039091169063f6029dbf90602401600060405180830381600087803b15801561024357600080fd5b505af1158015610257573d6000803e3d6000fd5b50506040513392507ffefcb765b45cfa60c8b26ae8ad8472628a186bc6b81ec5bd486e605d1df222b79150600090a250565b6000546001600160a01b031633146102d25760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610141565b600255565b6000826102e485846102ed565b14949350505050565b600081815b84518110156103325761031e8286838151811061031157610311610482565b602002602001015161033a565b91508061032a81610498565b9150506102f2565b509392505050565b6000818310610356576000828152602084905260409020610365565b60008381526020839052604090205b9392505050565b60006020828403121561037e57600080fd5b81356001600160a01b038116811461036557600080fd5b634e487b7160e01b600052604160045260246000fd5b600060208083850312156103be57600080fd5b823567ffffffffffffffff808211156103d657600080fd5b818501915085601f8301126103ea57600080fd5b8135818111156103fc576103fc610395565b8060051b604051601f19603f8301168101818110858211171561042157610421610395565b60405291825284820192508381018501918883111561043f57600080fd5b938501935b8285101561045d57843584529385019392850192610444565b98975050505050505050565b60006020828403121561047b57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b6000600182016104b857634e487b7160e01b600052601160045260246000fd5b506001019056fea164736f6c634300080f000a";
const isSuperArgs = (xs) => xs.length > 1;
class DefinitelyFamily__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(owner, definitelyMemberships_, existingMembersRoot_, overrides) {
        return super.deploy(owner, definitelyMemberships_, existingMembersRoot_, overrides || {});
    }
    getDeployTransaction(owner, definitelyMemberships_, existingMembersRoot_, overrides) {
        return super.getDeployTransaction(owner, definitelyMemberships_, existingMembersRoot_, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.DefinitelyFamily__factory = DefinitelyFamily__factory;
DefinitelyFamily__factory.bytecode = _bytecode;
DefinitelyFamily__factory.abi = _abi;
