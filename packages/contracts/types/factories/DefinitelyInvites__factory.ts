/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DefinitelyInvites,
  DefinitelyInvitesInterface,
} from "../DefinitelyInvites";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "definitelyMemberships_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "inviteCooldown_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InviteOnCooldown",
    type: "error",
  },
  {
    inputs: [],
    name: "NoInviteToClaim",
    type: "error",
  },
  {
    inputs: [],
    name: "NotDefMember",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "invited",
        type: "address",
      },
    ],
    name: "InviteClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "invited",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "invitedBy",
        type: "address",
      },
    ],
    name: "MemberInvited",
    type: "event",
  },
  {
    inputs: [],
    name: "claimInvite",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "definitelyMemberships",
    outputs: [
      {
        internalType: "contract IDefinitelyMemberships",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "inviteAvailable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inviteCooldown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "memberLastSentInvite",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "sendClaimableInvite",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "sendImediateInvite",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105c53803806105c583398101604081905261002f91610058565b600080546001600160a01b0319166001600160a01b039390931692909217909155600155610092565b6000806040838503121561006b57600080fd5b82516001600160a01b038116811461008257600080fd5b6020939093015192949293505050565b610524806100a16000396000f3fe608060405234801561001057600080fd5b506004361061007c5760003560e01c80637d491b311161005b5780637d491b31146100e157806381d42f521461010c57806390a50a8c14610114578063bd0655601461014257600080fd5b8062b8dafd14610081578063478350cb146100965780637ba9daea146100a9575b600080fd5b61009461008f36600461049f565b61014b565b005b6100946100a436600461049f565b61028f565b6100cc6100b736600461049f565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6000546100f4906001600160a01b031681565b6040516001600160a01b0390911681526020016100d8565b6100946103cd565b61013461012236600461049f565b60026020526000908152604090205481565b6040519081526020016100d8565b61013460015481565b6000546040516305183ba760e51b81523360048201819052916001600160a01b03169063a30774e090602401602060405180830381865afa158015610194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b891906104cf565b6101d557604051633a20139760e01b815260040160405180910390fd5b6001543360009081526002602052604090205442916101f3916104f1565b10156102125760405163319289b960e01b815260040160405180910390fd5b6001600160a01b0382166000908152600360205260409020805460ff19166001179055610255336001600160a01b03166000908152600260205260409020429055565b60405133906001600160a01b038416907f6c246c8894ac239253d22cd508dbe8eb7e027e0589cdd4ff16dbb4238ccd983490600090a35050565b6000546040516305183ba760e51b81523360048201819052916001600160a01b03169063a30774e090602401602060405180830381865afa1580156102d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fc91906104cf565b61031957604051633a20139760e01b815260040160405180910390fd5b600154336000908152600260205260409020544291610337916104f1565b10156103565760405163319289b960e01b815260040160405180910390fd5b60005460405163f6029dbf60e01b81526001600160a01b0384811660048301529091169063f6029dbf90602401600060405180830381600087803b15801561039d57600080fd5b505af11580156103b1573d6000803e3d6000fd5b5050336000908152600260205260409020429055506102559050565b3360009081526003602052604090205460ff16156103fe5760405163c8c1b9f560e01b815260040160405180910390fd5b60005460405163f6029dbf60e01b81523360048201526001600160a01b039091169063f6029dbf90602401600060405180830381600087803b15801561044357600080fd5b505af1158015610457573d6000803e3d6000fd5b50506040513392507f402d50861a0f5a452c3792e65b14df1e0ed5713d0d1977b362952f9d04b9fc5f9150600090a2336000908152600360205260409020805460ff19169055565b6000602082840312156104b157600080fd5b81356001600160a01b03811681146104c857600080fd5b9392505050565b6000602082840312156104e157600080fd5b815180151581146104c857600080fd5b6000821982111561051257634e487b7160e01b600052601160045260246000fd5b50019056fea164736f6c634300080f000a";

type DefinitelyInvitesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DefinitelyInvitesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DefinitelyInvites__factory extends ContractFactory {
  constructor(...args: DefinitelyInvitesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    definitelyMemberships_: PromiseOrValue<string>,
    inviteCooldown_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DefinitelyInvites> {
    return super.deploy(
      definitelyMemberships_,
      inviteCooldown_,
      overrides || {}
    ) as Promise<DefinitelyInvites>;
  }
  override getDeployTransaction(
    definitelyMemberships_: PromiseOrValue<string>,
    inviteCooldown_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      definitelyMemberships_,
      inviteCooldown_,
      overrides || {}
    );
  }
  override attach(address: string): DefinitelyInvites {
    return super.attach(address) as DefinitelyInvites;
  }
  override connect(signer: Signer): DefinitelyInvites__factory {
    return super.connect(signer) as DefinitelyInvites__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DefinitelyInvitesInterface {
    return new utils.Interface(_abi) as DefinitelyInvitesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DefinitelyInvites {
    return new Contract(address, _abi, signerOrProvider) as DefinitelyInvites;
  }
}
