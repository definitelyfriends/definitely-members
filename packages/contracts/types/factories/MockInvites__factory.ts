/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MockInvites, MockInvitesInterface } from "../MockInvites";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "definitelyMemberships_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NoInviteToClaim",
    type: "error",
  },
  {
    inputs: [],
    name: "claimInvite",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "definitelyMemberships",
    outputs: [
      {
        internalType: "contract IDefinitelyMemberships",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "inviteAvailable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "sendClaimableInvite",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "sendImediateInvite",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516102d23803806102d283398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61023f806100936000396000f3fe608060405234801561001057600080fd5b50600436106100565760003560e01c8062b8dafd1461005b578063478350cb146100925780637ba9daea146100a55780637d491b31146100dd57806381d42f5214610108575b600080fd5b610090610069366004610202565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b005b6100906100a0366004610202565b610110565b6100c86100b3366004610202565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6000546100f0906001600160a01b031681565b6040516001600160a01b0390911681526020016100d4565b610090610172565b60005460405163f6029dbf60e01b81526001600160a01b0383811660048301529091169063f6029dbf90602401600060405180830381600087803b15801561015757600080fd5b505af115801561016b573d6000803e3d6000fd5b5050505050565b3360009081526001602052604090205460ff16156101a35760405163c8c1b9f560e01b815260040160405180910390fd5b60005460405163f6029dbf60e01b81523360048201526001600160a01b039091169063f6029dbf90602401600060405180830381600087803b1580156101e857600080fd5b505af11580156101fc573d6000803e3d6000fd5b50505050565b60006020828403121561021457600080fd5b81356001600160a01b038116811461022b57600080fd5b939250505056fea164736f6c634300080f000a";

type MockInvitesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockInvitesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockInvites__factory extends ContractFactory {
  constructor(...args: MockInvitesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    definitelyMemberships_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockInvites> {
    return super.deploy(
      definitelyMemberships_,
      overrides || {}
    ) as Promise<MockInvites>;
  }
  override getDeployTransaction(
    definitelyMemberships_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(definitelyMemberships_, overrides || {});
  }
  override attach(address: string): MockInvites {
    return super.attach(address) as MockInvites;
  }
  override connect(signer: Signer): MockInvites__factory {
    return super.connect(signer) as MockInvites__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockInvitesInterface {
    return new utils.Interface(_abi) as MockInvitesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockInvites {
    return new Contract(address, _abi, signerOrProvider) as MockInvites;
  }
}
